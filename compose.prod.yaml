services:
  blog-app:
    container_name: blog-app
    build:
      context: .
      dockerfile: prod.Dockerfile
      args:
        NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
        SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
        NEXT_PUBLIC_AUTH_REDIRECT_TO: ${NEXT_PUBLIC_AUTH_REDIRECT_TO}
        NEXT_PUBLIC_BASE_URL: ${NEXT_PUBLIC_BASE_URL}
        OPENAI_API_KEY: ${OPENAI_API_KEY}
        LOGIN_PIN_NUMBER: ${LOGIN_PIN_NUMBER}
        NEXT_PUBLIC_VALID_EMAIL_CONFIRMED_AT: ${NEXT_PUBLIC_VALID_EMAIL_CONFIRMED_AT}
        VALID_USER_CREATED_AT: ${VALID_USER_CREATED_AT}
        ORACLE_OLLAMA_HOST: ${ORACLE_OLLAMA_HOST}
        LLM_SECRET_KEY: ${LLM_SECRET_KEY}
        GOOGLE_SEARCH_API_KEY: ${GOOGLE_SEARCH_API_KEY}
        GOOGLE_SEARCH_CX: ${GOOGLE_SEARCH_CX}
        GOOGLE_AI_API_KEY: ${GOOGLE_AI_API_KEY}

    restart: always

    ports:
      - 3031:3000

    networks:
      - npm-network

    # 런타임에도 캐시 디렉토리를 볼륨으로 유지
    volumes:
      - hf-cache:/opt/hf-cache

networks:
  npm-network:
    external: true

volumes:
  hf-cache:
